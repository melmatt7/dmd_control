############################################################################
## 
##  Xilinx, Inc. 2006            www.xilinx.com 
##  Wed May 27 15:38:46 2009
##  Generated by MIG Version 2.3
##  
############################################################################
##  File name :       ddr2_sdram.ucf
## 
##  Details :     Constraints file
##                    FPGA family:       virtex5
##                    FPGA:              xc5vlx50-ff1153
##                    Speedgrade:        -1
##                    Design Entry:      VHDL
##                    Frequency:         150 MHz
##                    Design:            without Test bench
##                    DCM Used:          Disable
##                    Two Bytes per Bank: Disable
##                    No.Of Controllers: 1
##
############################################################################ 

########################################################################
# Controller 0
# Memory Device: DDR2_SDRAM->SODIMMs->MT16HTF25664HY-667 #
# Data Width:     64 #
# Data Mask:     1 #
########################################################################


################################################################################
# I/O STANDARDS
################################################################################

NET  "ddr2_dq[*]"                               IOSTANDARD = SSTL18_II_DCI;
NET  "ddr2_a[*]"                                IOSTANDARD = SSTL18_II;
NET  "ddr2_ba[*]"                               IOSTANDARD = SSTL18_II;
NET  "ddr2_ras_n"                               IOSTANDARD = SSTL18_II;
NET  "ddr2_cas_n"                               IOSTANDARD = SSTL18_II;
NET  "ddr2_we_n"                                IOSTANDARD = SSTL18_II;
NET  "ddr2_cs_n[*]"                             IOSTANDARD = SSTL18_II;
NET  "ddr2_odt[*]"                              IOSTANDARD = SSTL18_II;
NET  "ddr2_cke[*]"                              IOSTANDARD = SSTL18_II;
NET  "ddr2_dm[*]"                               IOSTANDARD = SSTL18_II_DCI; #SSTL18_II
NET  "ddr2_dqs[*]"                              IOSTANDARD = DIFF_SSTL18_II_DCI;
NET  "ddr2_dqs_n[*]"                            IOSTANDARD = DIFF_SSTL18_II_DCI;
NET  "ddr2_ck[*]"                               IOSTANDARD = DIFF_SSTL18_II;
NET  "ddr2_ck_n[*]"                             IOSTANDARD = DIFF_SSTL18_II;

################################################################################
# Location Constraints
################################################################################

NET  "ddr2_a[0]"                                 LOC = "L15" ;	      #Bank 
NET  "ddr2_a[1]"                                 LOC = "L14" ;	      #Bank 
NET  "ddr2_a[10]"                                LOC = "J19" ;	      #Bank 
NET  "ddr2_a[11]"                                LOC = "L16" ;	      #Bank 
NET  "ddr2_a[12]"                                LOC = "K16" ;	      #Bank 
NET  "ddr2_a[13]"                                LOC = "L21" ;	      #Bank 
NET  "ddr2_a[2]"                                 LOC = "K23" ;	      #Bank 
NET  "ddr2_a[3]"                                 LOC = "L23" ;	      #Bank 
NET  "ddr2_a[4]"                                 LOC = "K14" ;	      #Bank 
NET  "ddr2_a[5]"                                 LOC = "K13" ;	      #Bank 
NET  "ddr2_a[6]"                                 LOC = "J22" ;	      #Bank 
NET  "ddr2_a[7]"                                 LOC = "K22" ;	      #Bank 
NET  "ddr2_a[8]"                                 LOC = "J12" ;	      #Bank 
NET  "ddr2_a[9]"                                 LOC = "K12" ;	      #Bank 
NET  "ddr2_ba[0]"                                LOC = "P5" ;	      #Bank 
NET  "ddr2_ba[1]"                                LOC = "T4" ;	      #Bank 
NET  "ddr2_ba[2]"                                LOC = "U5" ;	      #Bank 
NET  "ddr2_cas_n"                                LOC = "U7" ;	      #Bank 
NET  "ddr2_ck_n[0]"                              LOC = "L19" ;	      #Bank 
NET  "ddr2_ck[0]"                                LOC = "L20" ;	      #Bank 
NET  "ddr2_ck_n[1]"                              LOC = "K18" ;	      #Bank 
NET  "ddr2_ck[1]"                                LOC = "K17" ;	      #Bank 
NET  "ddr2_cke[0]"                               LOC = "R11" ;	      #Bank 
NET  "ddr2_cke[1]"                               LOC = "T10" ;	      #Bank 
NET  "ddr2_cs_n[0]"                              LOC = "U8" ;	      #Bank 
NET  "ddr2_cs_n[1]"                              LOC = "U11" ;	      #Bank 
NET  "ddr2_dq[0]"                                LOC = "J27" ;	      #Bank 
NET  "ddr2_dq[1]"                                LOC = "K24" ;	      #Bank 
NET  "ddr2_dq[10]"                               LOC = "H25" ;	      #Bank 
NET  "ddr2_dq[11]"                               LOC = "H24" ;	      #Bank 
NET  "ddr2_dq[12]"                               LOC = "F26" ;	      #Bank 
NET  "ddr2_dq[13]"                               LOC = "K28" ;	      #Bank 
NET  "ddr2_dq[14]"                               LOC = "L28" ;	      #Bank 
NET  "ddr2_dq[15]"                               LOC = "K27" ;	      #Bank 
NET  "ddr2_dq[16]"                               LOC = "N28" ;	      #Bank 
NET  "ddr2_dq[17]"                               LOC = "N25" ;	      #Bank 
NET  "ddr2_dq[18]"                               LOC = "P25" ;	      #Bank 
NET  "ddr2_dq[19]"                               LOC = "P26" ;	      #Bank 
NET  "ddr2_dq[2]"                                LOC = "L25" ;	      #Bank 
NET  "ddr2_dq[20]"                               LOC = "M28" ;	      #Bank 
NET  "ddr2_dq[21]"                               LOC = "P24" ;	      #Bank 
NET  "ddr2_dq[22]"                               LOC = "R24" ;	      #Bank 
NET  "ddr2_dq[23]"                               LOC = "P27" ;	      #Bank 
NET  "ddr2_dq[24]"                               LOC = "G10" ;	      #Bank 
NET  "ddr2_dq[25]"                               LOC = "F10" ;	      #Bank 
NET  "ddr2_dq[26]"                               LOC = "J11" ;	      #Bank 
NET  "ddr2_dq[27]"                               LOC = "H10" ;	      #Bank 
NET  "ddr2_dq[28]"                               LOC = "J9" ;	      #Bank 
NET  "ddr2_dq[29]"                               LOC = "E9" ;	      #Bank 
NET  "ddr2_dq[3]"                                LOC = "M25" ;	      #Bank 
NET  "ddr2_dq[30]"                               LOC = "L11" ;	      #Bank 
NET  "ddr2_dq[31]"                               LOC = "K11" ;	      #Bank 
NET  "ddr2_dq[32]"                               LOC = "G6" ;	      #Bank 
NET  "ddr2_dq[33]"                               LOC = "F8" ;	      #Bank 
NET  "ddr2_dq[34]"                               LOC = "J7" ;	      #Bank 
NET  "ddr2_dq[35]"                               LOC = "K7" ;	      #Bank 
NET  "ddr2_dq[36]"                               LOC = "E7" ;	      #Bank 
NET  "ddr2_dq[37]"                               LOC = "E8" ;	      #Bank 
NET  "ddr2_dq[38]"                               LOC = "M10" ;	      #Bank 
NET  "ddr2_dq[39]"                               LOC = "M11" ;	      #Bank 
NET  "ddr2_dq[4]"                                LOC = "J25" ;	      #Bank 
NET  "ddr2_dq[40]"                               LOC = "M7" ;	      #Bank 
NET  "ddr2_dq[41]"                               LOC = "M8" ;	      #Bank 
NET  "ddr2_dq[42]"                               LOC = "P7" ;	      #Bank 
NET  "ddr2_dq[43]"                               LOC = "P9" ;	      #Bank 
NET  "ddr2_dq[44]"                               LOC = "N7" ;	      #Bank 
NET  "ddr2_dq[45]"                               LOC = "N8" ;	      #Bank 
NET  "ddr2_dq[46]"                               LOC = "N10" ;	      #Bank 
NET  "ddr2_dq[47]"                               LOC = "P11" ;	      #Bank 
NET  "ddr2_dq[48]"                               LOC = "H5" ;	      #Bank 
NET  "ddr2_dq[49]"                               LOC = "J6" ;	      #Bank 
NET  "ddr2_dq[5]"                                LOC = "M26" ;	      #Bank 
NET  "ddr2_dq[50]"                               LOC = "K6" ;	      #Bank 
NET  "ddr2_dq[51]"                               LOC = "L6" ;	      #Bank 
NET  "ddr2_dq[52]"                               LOC = "F5" ;	      #Bank 
NET  "ddr2_dq[53]"                               LOC = "G5" ;	      #Bank 
NET  "ddr2_dq[54]"                               LOC = "F4" ;	      #Bank 
NET  "ddr2_dq[55]"                               LOC = "E4" ;	      #Bank 
NET  "ddr2_dq[56]"                               LOC = "L5" ;	      #Bank 
NET  "ddr2_dq[57]"                               LOC = "L4" ;	      #Bank 
NET  "ddr2_dq[58]"                               LOC = "H4" ;	      #Bank 
NET  "ddr2_dq[59]"                               LOC = "R6" ;	      #Bank 
NET  "ddr2_dq[6]"                                LOC = "L24" ;	      #Bank 
NET  "ddr2_dq[60]"                               LOC = "M5" ;	      #Bank 
NET  "ddr2_dq[61]"                               LOC = "J4" ;	      #Bank 
NET  "ddr2_dq[62]"                               LOC = "T5" ;	      #Bank 
NET  "ddr2_dq[63]"                               LOC = "U6" ;	      #Bank 
NET  "ddr2_dq[7]"                                LOC = "L26" ;	      #Bank 
NET  "ddr2_dq[8]"                                LOC = "G25" ;	      #Bank 
NET  "ddr2_dq[9]"                                LOC = "G26" ;	      #Bank 
NET  "ddr2_dm[0]"                                LOC = "J24" ;	      #Bank 
NET  "ddr2_dm[1]"                                LOC = "F25" ;	      #Bank 
NET  "ddr2_dm[2]"                                LOC = "N24" ;	      #Bank 
NET  "ddr2_dm[3]"                                LOC = "J10" ;	      #Bank 
NET  "ddr2_dm[4]"                                LOC = "F9" ;	      #Bank 
NET  "ddr2_dm[5]"                                LOC = "N9" ;	      #Bank 
NET  "ddr2_dm[6]"                                LOC = "J5" ;	      #Bank 
NET  "ddr2_dm[7]"                                LOC = "K4" ;	      #Bank 
NET  "ddr2_dqs_n[0]"                             LOC = "H27" ;	      #Bank 
NET  "ddr2_dqs[0]"                               LOC = "G27" ;	      #Bank 
NET  "ddr2_dqs_n[1]"                             LOC = "G28" ;	      #Bank 
NET  "ddr2_dqs[1]"                               LOC = "H28" ;	      #Bank 
NET  "ddr2_dqs_n[2]"                             LOC = "F28" ;	      #Bank 
NET  "ddr2_dqs[2]"                               LOC = "E28" ;	      #Bank 
NET  "ddr2_dqs_n[3]"                             LOC = "L9" ;	      #Bank 
NET  "ddr2_dqs[3]"                               LOC = "K9" ;	      #Bank 
NET  "ddr2_dqs_n[4]"                             LOC = "G8" ;	      #Bank 
NET  "ddr2_dqs[4]"                               LOC = "H9" ;	      #Bank 
NET  "ddr2_dqs_n[5]"                             LOC = "E6" ;	      #Bank 
NET  "ddr2_dqs[5]"                               LOC = "F6" ;	      #Bank 
NET  "ddr2_dqs_n[6]"                             LOC = "N5" ;	      #Bank 
NET  "ddr2_dqs[6]"                               LOC = "N4" ;	      #Bank 
NET  "ddr2_dqs_n[7]"                             LOC = "R4" ;	      #Bank 
NET  "ddr2_dqs[7]"                               LOC = "P4" ;	      #Bank 
NET  "ddr2_odt[0]"                               LOC = "T8" ;	      #Bank 
NET  "ddr2_odt[1]"                               LOC = "T9" ;	      #Bank 
NET  "ddr2_ras_n"                                LOC = "P6" ;	      #Bank 
NET  "ddr2_we_n"                                 LOC = "T6" ;	      #Bank 


###############################################################################
# Define multicycle paths - these paths may take longer because additional
# time allowed for logic to settle in calibration/initialization FSM
###############################################################################

# MIG 2.1: Eliminate Timegroup definitions for CLK0, and CLK90. Instead trace
#          multicycle paths from originating flip-flop to ANY destination
#          flip-flop (or in some cases, it can also be a BRAM)
# MUX Select for either rising/falling CLK0 for 2nd stage read capture
INST "*/u_phy_calib/gen_rd_data_sel*.u_ff_rd_data_sel" TNM = "TNM_RD_DATA_SEL";
TIMESPEC "TS_MC_RD_DATA_SEL" = FROM "TNM_RD_DATA_SEL" TO FFS
"TS_i_appsfpga_io_i_pll_mem_CLKOUT2_BUF" * 4;
# MUX select for read data - optional delay on data to account for byte skews
INST "*/u_usr_rd/gen_rden_sel_mux*.u_ff_rden_sel_mux" TNM = "TNM_RDEN_SEL_MUX";
TIMESPEC "TS_MC_RDEN_SEL_MUX" = FROM "TNM_RDEN_SEL_MUX" TO FFS
"TS_i_appsfpga_io_i_pll_mem_CLKOUT2_BUF" * 4;
# Calibration/Initialization complete status flag (for PHY logic only) - can
# be used to drive both flip-flops and BRAMs
INST "*/u_phy_init/u_ff_phy_init_data_sel" TNM = "TNM_PHY_INIT_DATA_SEL";
TIMESPEC "TS_MC_PHY_INIT_DATA_SEL_0" = FROM "TNM_PHY_INIT_DATA_SEL" TO FFS
"TS_i_appsfpga_io_i_pll_mem_CLKOUT2_BUF" * 4;
TIMESPEC "TS_MC_PHY_INIT_DATA_SEL_90" = FROM "TNM_PHY_INIT_DATA_SEL" TO RAMS
"TS_i_appsfpga_io_i_pll_mem_CLKOUT2_BUF" * 4;
# Select (address) bits for SRL32 shift registers used in stage3/stage4
# calibration
INST "*/u_phy_calib/gen_gate_dly*.u_ff_gate_dly" TNM = "TNM_GATE_DLY";
TIMESPEC "TS_MC_GATE_DLY" = FROM "TNM_GATE_DLY" TO FFS "TS_i_appsfpga_io_i_pll_mem_CLKOUT2_BUF" * 4;
INST "*/u_phy_calib/gen_rden_dly*.u_ff_rden_dly" TNM = "TNM_RDEN_DLY";
TIMESPEC "TS_MC_RDEN_DLY" = FROM "TNM_RDEN_DLY" TO FFS "TS_i_appsfpga_io_i_pll_mem_CLKOUT2_BUF" * 4;
INST "*/u_phy_calib/gen_cal_rden_dly*.u_ff_cal_rden_dly"
  TNM = "TNM_CAL_RDEN_DLY";
TIMESPEC "TS_MC_CAL_RDEN_DLY" = FROM "TNM_CAL_RDEN_DLY" TO FFS
  "TS_i_appsfpga_io_i_pll_mem_CLKOUT2_BUF" * 4;
  
  
############################################################################### 
#The following constraint is added to prevent (false) hold time violations on
#the data path from stage1 to stage2 capture flops.  Stage1 flops are clocked by 
#the delayed DQS and stage2 flops are clocked by the clk0 clock. Placing a TIG 
#on the DQ IDDR capture flop instance to achieve this is acceptable because timing
#is guaranteed through the use of separate Predictable IP constraints. These
#violations are reported when anunconstrained path report is run.	  
############################################################################### 
INST "*/gen_dq[*].u_iob_dq/gen*.u_iddr_dq" TIG ;

###############################################################################
# DQS Read Post amble Glitch Squelch circuit related constraints
###############################################################################

###############################################################################
# LOC placement of DQS-squelch related IDDR and IDELAY elements
# Each circuit can be located at any of the following locations:
#  1. Unused "N"-side of DQS differential pair I/O
#  2. DM data mask (output only, input side is free for use)
#  3. Any output-only site
###############################################################################
INST "*/u_mem_if_top/u_phy_top/u_phy_io/u_phy_calib/gen_gate[*].u_en_dqs_ff" TNM = EN_DQS_FF;
TIMESPEC TS_FROM_EN_DQS_FF_TO_DQ_CE_FF = FROM EN_DQS_FF TO TNM_DQ_CE_IDDR 3.85 ns DATAPATHONLY;

#INST "*/gen_dqs[0].u_iob_dqs/u_iddr_dq_ce"  LOC = "ILOGIC_X0Y222";
#INST "*/gen_dqs[0].u_iob_dqs/u_iodelay_dq_ce"  LOC = "IODELAY_X0Y222";
#INST "*/gen_dqs[1].u_iob_dqs/u_iddr_dq_ce"  LOC = "ILOGIC_X0Y220";
#INST "*/gen_dqs[1].u_iob_dqs/u_iodelay_dq_ce"  LOC = "IODELAY_X0Y220";
#INST "*/gen_dqs[2].u_iob_dqs/u_iddr_dq_ce"  LOC = "ILOGIC_X0Y218";
#INST "*/gen_dqs[2].u_iob_dqs/u_iodelay_dq_ce"  LOC = "IODELAY_X0Y218";
#INST "*/gen_dqs[3].u_iob_dqs/u_iddr_dq_ce"  LOC = "ILOGIC_X0Y182";
#INST "*/gen_dqs[3].u_iob_dqs/u_iodelay_dq_ce"  LOC = "IODELAY_X0Y182";
#INST "*/gen_dqs[4].u_iob_dqs/u_iddr_dq_ce"  LOC = "ILOGIC_X0Y180";
#INST "*/gen_dqs[4].u_iob_dqs/u_iodelay_dq_ce"  LOC = "IODELAY_X0Y180";
#INST "*/gen_dqs[5].u_iob_dqs/u_iddr_dq_ce"  LOC = "ILOGIC_X0Y178";
#INST "*/gen_dqs[5].u_iob_dqs/u_iodelay_dq_ce"  LOC = "IODELAY_X0Y178";
#INST "*/gen_dqs[6].u_iob_dqs/u_iddr_dq_ce"  LOC = "ILOGIC_X0Y142";
#INST "*/gen_dqs[6].u_iob_dqs/u_iodelay_dq_ce"  LOC = "IODELAY_X0Y142";
#INST "*/gen_dqs[7].u_iob_dqs/u_iddr_dq_ce"  LOC = "ILOGIC_X0Y140";
#INST "*/gen_dqs[7].u_iob_dqs/u_iodelay_dq_ce"  LOC = "IODELAY_X0Y140";

INST "*/gen_dqs[0].u_iob_dqs/u_iddr_dq_ce"  LOC = "ILOGIC_X0Y222";
INST "*/gen_dqs[0].u_iob_dqs/u_iodelay_dq_ce"  LOC = "IODELAY_X0Y222";
INST "*/gen_dqs[1].u_iob_dqs/u_iddr_dq_ce"  LOC = "ILOGIC_X0Y220";
INST "*/gen_dqs[1].u_iob_dqs/u_iodelay_dq_ce"  LOC = "IODELAY_X0Y220";
INST "*/gen_dqs[2].u_iob_dqs/u_iddr_dq_ce"  LOC = "ILOGIC_X0Y218";
INST "*/gen_dqs[2].u_iob_dqs/u_iodelay_dq_ce"  LOC = "IODELAY_X0Y218";
INST "*/gen_dqs[3].u_iob_dqs/u_iddr_dq_ce"  LOC = "ILOGIC_X2Y222";
INST "*/gen_dqs[3].u_iob_dqs/u_iodelay_dq_ce"  LOC = "IODELAY_X2Y222";
INST "*/gen_dqs[4].u_iob_dqs/u_iddr_dq_ce"  LOC = "ILOGIC_X2Y220";
INST "*/gen_dqs[4].u_iob_dqs/u_iodelay_dq_ce"  LOC = "IODELAY_X2Y220";
INST "*/gen_dqs[5].u_iob_dqs/u_iddr_dq_ce"  LOC = "ILOGIC_X2Y218";
INST "*/gen_dqs[5].u_iob_dqs/u_iodelay_dq_ce"  LOC = "IODELAY_X2Y218";
INST "*/gen_dqs[6].u_iob_dqs/u_iddr_dq_ce"  LOC = "ILOGIC_X2Y182";
INST "*/gen_dqs[6].u_iob_dqs/u_iodelay_dq_ce"  LOC = "IODELAY_X2Y182";
INST "*/gen_dqs[7].u_iob_dqs/u_iddr_dq_ce"  LOC = "ILOGIC_X2Y180";
INST "*/gen_dqs[7].u_iob_dqs/u_iodelay_dq_ce"  LOC = "IODELAY_X2Y180";

###############################################################################
# LOC and timing constraints for flop driving DQS CE enable signal
# from fabric logic. Even though the absolute delay on this path is
# calibrated out (when synchronizing this output to DQS), the delay
# should still be kept as low as possible to reduce post-calibration
# voltage/temp variations - these are roughly proportional to the
# absolute delay of the path
###############################################################################

#INST "*/u_phy_calib/gen_gate[0].u_en_dqs_ff"  LOC = SLICE_X0Y111;
#INST "*/u_phy_calib/gen_gate[1].u_en_dqs_ff"  LOC = SLICE_X0Y110;
#INST "*/u_phy_calib/gen_gate[2].u_en_dqs_ff"  LOC = SLICE_X0Y109;
#INST "*/u_phy_calib/gen_gate[3].u_en_dqs_ff"  LOC = SLICE_X0Y91;
#INST "*/u_phy_calib/gen_gate[4].u_en_dqs_ff"  LOC = SLICE_X0Y90;
#INST "*/u_phy_calib/gen_gate[5].u_en_dqs_ff"  LOC = SLICE_X0Y89;
#INST "*/u_phy_calib/gen_gate[6].u_en_dqs_ff"  LOC = SLICE_X0Y71;
#INST "*/u_phy_calib/gen_gate[7].u_en_dqs_ff"  LOC = SLICE_X0Y70;

INST "*/u_phy_calib/gen_gate[0].u_en_dqs_ff"  LOC = SLICE_X0Y111;
INST "*/u_phy_calib/gen_gate[1].u_en_dqs_ff"  LOC = SLICE_X0Y110;
INST "*/u_phy_calib/gen_gate[2].u_en_dqs_ff"  LOC = SLICE_X0Y109;
INST "*/u_phy_calib/gen_gate[3].u_en_dqs_ff"  LOC = SLICE_X51Y111;
INST "*/u_phy_calib/gen_gate[4].u_en_dqs_ff"  LOC = SLICE_X51Y110;
INST "*/u_phy_calib/gen_gate[5].u_en_dqs_ff"  LOC = SLICE_X51Y109;
INST "*/u_phy_calib/gen_gate[6].u_en_dqs_ff"  LOC = SLICE_X51Y91;
INST "*/u_phy_calib/gen_gate[7].u_en_dqs_ff"  LOC = SLICE_X51Y90;

# Control for DQS gate - from fabric flop. Prevent "runaway" delay -
# two parts to this path: (1) from fabric flop to IDELAY, (2) from
# IDELAY to asynchronous reset of IDDR that drives the DQ CE's
# This can be relaxed by the user for lower frequencies:
# 300MHz = 850ps, 267MHz = 900ps. At 200MHz = 950ps.
# In general PAR should be able to route this
# within 900ps over all speed grades.
NET "*/u_phy_io/en_dqs*" MAXDELAY = 600 ps;
NET "*/u_phy_io/gen_dqs*.u_iob_dqs/en_dqs_sync" MAXDELAY = 850 ps;

###############################################################################
# "Half-cycle" path constraint from IDDR to CE pin for all DQ IDDR's
# for DQS Read Post amble Glitch Squelch circuit
###############################################################################

# Max delay from output of IDDR to CE input of DQ IDDRs = tRPST + some slack
#  where slack account for rise-time of DQS on board. For now assume slack = 
#  0.400ns (based on initial SPICE simulations, assumes use of ODT), so 
#  time = 0.4*Tcyc + 0.40ns = 1.6ns @333MHz
INST "*/gen_dqs[*].u_iob_dqs/u_iddr_dq_ce" TNM = "TNM_DQ_CE_IDDR";
INST "*/gen_dq[*].u_iob_dq/gen_stg2_*.u_iddr_dq" TNM = "TNM_DQS_FLOPS";
TIMESPEC "TS_DQ_CE" = FROM "TNM_DQ_CE_IDDR" TO "TNM_DQS_FLOPS" 3.067 ns;

###############################################################################
# MIG 2.2: Prevent unrelated logic from being packed into any slices used
#          by read data capture RPM's - if unrelated logic gets packed into
#          these slices, it could cause the DIRT strings that define the
#          IDDR -> fabric flop routing to become unroutable during PAR stage
#          (unrelated logic may require routing resources required by the
#          DIRT strings - MAP does not currently take into account DIRT
#          strings when placing logic
###############################################################################

#AREA_GROUP "DDR_CAPTURE_FFS" GROUP = CLOSED;

###############################################################################
# Location constraints for DQ read-data capture flops in fabric (for 2nd
# stage capture)
###############################################################################

#INST "*/gen_dq[0].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y115;
#INST "*/gen_dq[1].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y119;
#INST "*/gen_dq[2].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y118;
#INST "*/gen_dq[3].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y116;
#INST "*/gen_dq[4].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y117;
#INST "*/gen_dq[5].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y116;
#INST "*/gen_dq[6].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y119;
#INST "*/gen_dq[7].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y118;
#INST "*/gen_dq[8].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y114;
#INST "*/gen_dq[9].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y114;
#INST "*/gen_dq[10].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y113;
#INST "*/gen_dq[11].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y113;
#INST "*/gen_dq[12].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y112;
#INST "*/gen_dq[13].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y106;
#INST "*/gen_dq[14].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y106;
#INST "*/gen_dq[15].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y105;
#INST "*/gen_dq[16].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y104;
#INST "*/gen_dq[17].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y101;
#INST "*/gen_dq[18].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y101;
#INST "*/gen_dq[19].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y103;
#INST "*/gen_dq[20].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y104;
#INST "*/gen_dq[21].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y102;
#INST "*/gen_dq[22].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y100;
#INST "*/gen_dq[23].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X0Y103;
#INST "*/gen_dq[24].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y118;
#INST "*/gen_dq[25].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y116;
#INST "*/gen_dq[26].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y119;
#INST "*/gen_dq[27].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y118;
#INST "*/gen_dq[28].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y117;
#INST "*/gen_dq[29].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y116;
#INST "*/gen_dq[30].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y115;
#INST "*/gen_dq[31].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y119;
#INST "*/gen_dq[32].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y105;
#INST "*/gen_dq[33].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y112;
#INST "*/gen_dq[34].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y106;
#INST "*/gen_dq[35].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y106;
#INST "*/gen_dq[36].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y114;
#INST "*/gen_dq[37].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y114;
#INST "*/gen_dq[38].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y113;
#INST "*/gen_dq[39].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y113;
#INST "*/gen_dq[40].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y104;
#INST "*/gen_dq[41].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y104;
#INST "*/gen_dq[42].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y103;
#INST "*/gen_dq[43].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y101;
#INST "*/gen_dq[44].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y103;
#INST "*/gen_dq[45].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y101;
#INST "*/gen_dq[46].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y102;
#INST "*/gen_dq[47].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y100;
#INST "*/gen_dq[48].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y97;
#INST "*/gen_dq[49].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y99;
#INST "*/gen_dq[50].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y99;
#INST "*/gen_dq[51].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y95;
#INST "*/gen_dq[52].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y98;
#INST "*/gen_dq[53].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y98;
#INST "*/gen_dq[54].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y96;
#INST "*/gen_dq[55].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y96;
#INST "*/gen_dq[56].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y93;
#INST "*/gen_dq[57].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y92;
#INST "*/gen_dq[58].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y94;
#INST "*/gen_dq[59].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y85;
#INST "*/gen_dq[60].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y93;
#INST "*/gen_dq[61].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y94;
#INST "*/gen_dq[62].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y86;
#INST "*/gen_dq[63].u_iob_dq/gen_stg2_*.u_ff_stg2a_rise"  RLOC_ORIGIN = X48Y86;